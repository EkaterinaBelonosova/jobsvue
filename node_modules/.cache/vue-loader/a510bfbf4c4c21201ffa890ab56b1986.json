{"remainingRequest":"C:\\Users\\acdyu\\Downloads\\jobs\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\acdyu\\Downloads\\jobs\\src\\components\\Jobsbody.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\acdyu\\Downloads\\jobs\\src\\components\\Jobsbody.vue","mtime":1566403136911},{"path":"C:\\Users\\acdyu\\Downloads\\jobs\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\acdyu\\Downloads\\jobs\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\acdyu\\Downloads\\jobs\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\acdyu\\Downloads\\jobs\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nfunction  urlad(page, desc) {\r\n  return 'https://jobs.github.com/positions.json?page='+ page + desc;\r\n}\r\nimport axios from 'axios'\r\n\r\n    export default {\r\n        name: 'Jobsbody',\r\n        data() {\r\n            return {\r\n                nextResults: null,\r\n                results: null,          \r\n                loading: true,\r\n                errored: false,\r\n                pageNumber: 1,\r\n                description: null,\r\n                checked: null\r\n            }\r\n\r\n        },\r\n        created () {\r\n            // загружаем данные, когда представление создано\r\n            // и данные реактивно отслеживаются\r\n            this.nextData();\r\n            this.fetchData();\r\n        },\r\n        watch: {\r\n            // при изменениях маршрута запрашиваем данные снова\r\n            '$route': 'nextData',\r\n            '$route': 'fetchData'     \r\n        },\r\n        methods: {\r\n            nextData: function () {\r\n                axios\r\n                .get(urlad(this.pageNumber+1, this.description)) // загружаем данные\r\n                .then(response => (this.nextResults = response.data)); // получаем  ответ\r\n                \r\n            },\r\n            fetchData: function () {\r\n                axios\r\n                .get(urlad(this.pageNumber, this.description)) // загружаем данные\r\n                .then(response => (this.results = response.data)) // получаем  ответ\r\n                .catch(error => {\r\n                    console.log(error);\r\n                    this.errored = true;\r\n                })\r\n                .finally(() => (this.loading = false));\r\n            },\r\n            nextPage: function(){\r\n                this.pageNumber++;\r\n                this.loading = true;\r\n                this.fetchData();\r\n                this.nextData(); \r\n            },\r\n            prevPage: function(){\r\n                this.pageNumber--;\r\n                this.loading = true;\r\n                this.fetchData(); \r\n                this.nextData();         \r\n            },\r\n            search: function(){\r\n                let loc  = \"\";\r\n                let desc  = \"\";\r\n                let check  = \"\";\r\n                if(this.$refs.local.value) loc = '&location='+ this.$refs.local.value;\r\n                if(this.$refs.descr.value) desc = '&description='+ this.$refs.descr.value;  \r\n                check = '&full_time='+ this.checked;       \r\n                this.description = loc + desc + check;\r\n                this.loading = true;\r\n                this.fetchData();\r\n                this.nextData();\r\n            },\r\n            cleanAll: function(){\r\n                Object.assign(this.$data, this.$options.data.call(this));\r\n                this.loading = true;\r\n                this.fetchData();\r\n                this.nextData();\r\n            }\r\n        },\r\n        filters: {\r\n            setDate (value) {\r\n            return new Date(value).toLocaleDateString();\r\n            },\r\n        },\r\n        computed: {\r\n            getNextURLEmpty() {  //проверка на пустоту данных получаемых с json\r\n                if(this.nextResults){\r\n                if(this.nextResults.length != 0) {\r\n                    return true;\r\n                }          \r\n                }\r\n                return false;\r\n            },\r\n            emptyData() {\r\n                console.log(this.results);\r\n                if(this.results){\r\n                if(this.results.length != 0) {\r\n                    return false;\r\n                }          \r\n                }\r\n                return true;\r\n            }\r\n\r\n        } \r\n    }\r\n",{"version":3,"sources":["Jobsbody.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6EA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA","file":"Jobsbody.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n    <div class=\"container\">\r\n    <h3 class=\"text-center\">Cryptocurrency Pricing</h3>\r\n    <section v-if=\"errored\">\r\n            <p>We're sorry, we're not able to retrieve this information at the moment, please try back later</p>\r\n    </section>\r\n    <section v-else>\r\n        <div class=\"row\">\r\n            <div class=\"col-sm-3\">\r\n                <h3 class=\"text-center\">Фильтр</h3>\r\n                <div class=\"input-group mb-3\">\r\n                    <div class=\"input-group-prepend\">\r\n                        <span class=\"input-group-text\" id=\"inputGroup-sizing-default\">Description</span>\r\n                    </div>\r\n                    <input ref=\"descr\" placeholder=\"description\" type=\"text\" class=\"form-control\" aria-label=\"Sizing example input\" aria-describedby=\"inputGroup-sizing-default\">\r\n                </div>\r\n                <div class=\"input-group mb-3\">\r\n                    <div class=\"input-group-prepend\">\r\n                        <span class=\"input-group-text\" id=\"inputGroup-sizing-default\" style=\"width: 106px;\">Location</span>\r\n                    </div>\r\n                    <input ref=\"local\" placeholder=\"location\" type=\"text\" class=\"form-control\" aria-label=\"Sizing example input\" aria-describedby=\"inputGroup-sizing-default\">\r\n                </div>\r\n                <div class=\"custom-control custom-checkbox\">\r\n                    <input type=\"checkbox\" class=\"custom-control-input\"  id=\"fullTime\">\r\n                    <label class=\"custom-control-label\" for=\"fullTime\">Full Time</label>\r\n                </div>\r\n                <button @click=\"search()\" type=\"button\" class=\"btn btn-primary\">Search</button>\r\n                <button @click=\"cleanAll()\" type=\"button\" class=\"btn btn-outline-secondary\">Clean</button>\r\n            </div>\r\n            <div v-if=\"loading\" class=\"col-sm-9\">\r\n                <div class=\"d-flex justify-content-center\">\r\n                    <div class=\"spinner-border m-5 text-primary\" role=\"status\">\r\n                        <span class=\"sr-only\">Loading...</span>\r\n                    </div>\r\n                </div>              \r\n            </div>\r\n            <div v-else class=\"col-sm-9\">\r\n                <div v-if=\"emptyData\" class=\"alert alert-danger\" role=\"alert\">\r\n                    Nothing found(\r\n                </div>\r\n                <nav aria-label=\"Page navigation example\">\r\n                    <ul class=\"pagination justify-content-end\">\r\n                        <li class=\"page-item\" v-if=\"pageNumber > 1\">\r\n                        <a class=\"page-link\" href=\"#\" aria-label=\"Previous\"  @click=\"prevPage()\">\r\n                            <span aria-hidden=\"true\">&laquo;</span>\r\n                        </a>\r\n                        </li>\r\n                        <li class=\"page-item\"><a class=\"page-link\" href=\"#\">{{pageNumber}}</a></li>\r\n                        <li class=\"page-item\" v-if=\"getNextURLEmpty\">\r\n                        <a class=\"page-link\" href=\"#\" aria-label=\"Next\" @click=\"nextPage()\">\r\n                            <span aria-hidden=\"true\">&raquo;</span>\r\n                        </a>\r\n                        </li>\r\n                    </ul>\r\n                </nav>\r\n                <div class=\"card-group\">\r\n                    <div class=\"col-sm-4\" v-for=\"vacancy in results\">\r\n                        <div class=\"card\" style=\"width: 18rem;height: 16rem;\">\r\n                            <div class=\"card-body\" >\r\n                                <h5 class=\"card-title\">{{vacancy.title}}</h5>\r\n                                <h6 class=\"card-subtitle mb-2 text-muted\">{{vacancy.location}}</h6>\r\n                                <h6 class=\"card-subtitle mb-2 text-muted\">{{vacancy.type}}</h6>\r\n                                <p class=\"card-text\">{{vacancy.company}}</p> \r\n                                <p class=\"card-text\"><small class=\"text-muted\">{{vacancy.created_at | setDate}}</small></p>\r\n                                <router-link :to=\"{path: '/about/'+vacancy.id }\" type=\"button\" class=\"btn btn-primary\">Detailed</router-link>                   \r\n                            </div>\r\n                        </div>\r\n                    </div> \r\n                </div>       \r\n            </div>\r\n        </div>\r\n    </section>\r\n \r\n</div>\r\n</template>\r\n\r\n<script>\r\nfunction  urlad(page, desc) {\r\n  return 'https://jobs.github.com/positions.json?page='+ page + desc;\r\n}\r\nimport axios from 'axios'\r\n\r\n    export default {\r\n        name: 'Jobsbody',\r\n        data() {\r\n            return {\r\n                nextResults: null,\r\n                results: null,          \r\n                loading: true,\r\n                errored: false,\r\n                pageNumber: 1,\r\n                description: null,\r\n                checked: null\r\n            }\r\n\r\n        },\r\n        created () {\r\n            // загружаем данные, когда представление создано\r\n            // и данные реактивно отслеживаются\r\n            this.nextData();\r\n            this.fetchData();\r\n        },\r\n        watch: {\r\n            // при изменениях маршрута запрашиваем данные снова\r\n            '$route': 'nextData',\r\n            '$route': 'fetchData'     \r\n        },\r\n        methods: {\r\n            nextData: function () {\r\n                axios\r\n                .get(urlad(this.pageNumber+1, this.description)) // загружаем данные\r\n                .then(response => (this.nextResults = response.data)); // получаем  ответ\r\n                \r\n            },\r\n            fetchData: function () {\r\n                axios\r\n                .get(urlad(this.pageNumber, this.description)) // загружаем данные\r\n                .then(response => (this.results = response.data)) // получаем  ответ\r\n                .catch(error => {\r\n                    console.log(error);\r\n                    this.errored = true;\r\n                })\r\n                .finally(() => (this.loading = false));\r\n            },\r\n            nextPage: function(){\r\n                this.pageNumber++;\r\n                this.loading = true;\r\n                this.fetchData();\r\n                this.nextData(); \r\n            },\r\n            prevPage: function(){\r\n                this.pageNumber--;\r\n                this.loading = true;\r\n                this.fetchData(); \r\n                this.nextData();         \r\n            },\r\n            search: function(){\r\n                let loc  = \"\";\r\n                let desc  = \"\";\r\n                let check  = \"\";\r\n                if(this.$refs.local.value) loc = '&location='+ this.$refs.local.value;\r\n                if(this.$refs.descr.value) desc = '&description='+ this.$refs.descr.value;  \r\n                check = '&full_time='+ this.checked;       \r\n                this.description = loc + desc + check;\r\n                this.loading = true;\r\n                this.fetchData();\r\n                this.nextData();\r\n            },\r\n            cleanAll: function(){\r\n                Object.assign(this.$data, this.$options.data.call(this));\r\n                this.loading = true;\r\n                this.fetchData();\r\n                this.nextData();\r\n            }\r\n        },\r\n        filters: {\r\n            setDate (value) {\r\n            return new Date(value).toLocaleDateString();\r\n            },\r\n        },\r\n        computed: {\r\n            getNextURLEmpty() {  //проверка на пустоту данных получаемых с json\r\n                if(this.nextResults){\r\n                if(this.nextResults.length != 0) {\r\n                    return true;\r\n                }          \r\n                }\r\n                return false;\r\n            },\r\n            emptyData() {\r\n                console.log(this.results);\r\n                if(this.results){\r\n                if(this.results.length != 0) {\r\n                    return false;\r\n                }          \r\n                }\r\n                return true;\r\n            }\r\n\r\n        } \r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"]}]}